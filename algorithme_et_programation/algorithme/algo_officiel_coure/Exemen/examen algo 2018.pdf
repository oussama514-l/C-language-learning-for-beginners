#include <stdio.h>
#include <stdlib.h>


void saisie(int T[], int n)
{
	int i;
	
	for(i=0; i<n; i++)
	{
		printf("Element [%d]: ", i+1);
		scanf("%d", &T[i]);
	}
}


void afficher(int T[], int n)
{
	int i;
	
	for(i=0; i<n; i++)
	{
		printf("%d\t", T[i]);
	}
}

void echanger(int T[], int i, int j)
{
	int temp;
	
	temp=T[i];
	T[i]=T[j];
	T[j]=temp;
}

void inverser(int T[], int i, int j)
{
	if(i<=j)
	{
		echanger(T, i, j);
		inverser(T, i+1, j-1);
	}
}

void copie(int A[], int a, int B[], int b)
{
	int i;
	
	for(i=0; i<a; i++)
	{
		B[b]=A[i];
		b++;
	}
}


int TabPalindron(int T[], int n)
{
	int CT[50], i;
	
	copie(T, n, CT, 0);
	inverser(T, 0, n-1);
	
	for(i=0; i<n; i++)
	{
		if(T[i] != CT[i])
			return 0;
	}
	
	return 1;
}

void tri_bulles_rec(int T[], int n, int i)
{
	int j;
	
	if(i<n)
	{
		for(j=0; j<=n-i-2; j++)
		{
			if(T[j]>T[j+1])
				echanger(T, j, j+1);
		}
	   tri_bulles_rec(T, n, i+1);
	}
}

int getMax(int T[], int d, int f)
{
	int i, i_max;
	
	i_max=d;
	for(i=d+1; i<f; i++)
	{
		if(T[i]>T[i_max])
			i_max=i;
	}

	return i_max;
}

void tri_selection_rec(int T[], int i)
{
	int i_max;
	
	if(i>0)
	{
		i_max=getMax(T, 0, i);
		if(i_max != i)
		{
			echanger(T, i_max, i);
		}
		tri_selection_rec(T, i-1);
	}
}

main()
{	
	int T[50], n=5;
	int i_min;
	saisie(T, n);
	printf("\nAffichage du tableau:\t"); afficher(T, n);
/*
	if(TabPalindron(T, n) == 1)
		printf("\n\nle tableau T est un palindrone");
	else
		printf("\n\nle tableau T n'est pas un palindrone"); */
		
	//tri_bulles_rec(T, n, 0);
	tri_selection_rec(T, n-1);	
	printf("\n\nAffichage du tableau apres le tri:\t"); afficher(T, n);
}
